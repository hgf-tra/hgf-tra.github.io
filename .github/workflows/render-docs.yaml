name: Render Documentation

on:
  workflow_call:
  push:
    branches:
      - main
    paths:
      - 'doc/**/*.adoc'
      # - 'doc/**/*.md'

permissions:
  contents: write

jobs:
  render-docs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build documentation with Docker
        run: |
          docker run --rm -v "${{ github.workspace }}:/docs" -w /docs javanile/mkdocs build --site-dir github-pages/rendered-docs

      - name: Generate mkdocs.yaml
        run: |
          echo 'site_name: HTS LTS Documentation' > mkdocs.yaml
          echo 'nav:' >> mkdocs.yaml
          echo '  - Home: index.html' >> mkdocs.yaml
          echo '  - Documentation:' >> mkdocs.yaml
          echo '      - List: github-pages/list.html' >> mkdocs.yaml

          find doc -type f -name '*.adoc' | while read -r file; do
            dir=$(dirname "$file")
            filename=$(basename "$file" .adoc)
            relative_path=$(echo "$file" | sed 's|^doc/||; s|\.adoc$|.html|')
            echo "      - $(basename "$dir"): " >> mkdocs.yaml
            echo "          - $filename: $relative_path" >> mkdocs.yaml
          done

          echo 'theme:' >> mkdocs.yaml
          echo '  name: mkdocs' >> mkdocs.yaml
          echo 'docs_dir: doc' >> mkdocs.yaml
      
      

      - name: Update list.html
        run: |
          # Start the HTML file with the basic structure
          echo '<!DOCTYPE html>' > github-pages/list.html
          echo '<html lang="de">' >> github-pages/list.html
          echo '  <head>' >> github-pages/list.html
          echo '    <meta charset="UTF-8">' >> github-pages/list.html
          echo '    <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> github-pages/list.html
          echo '    <title>HTS-LTS Topics</title>' >> github-pages/list.html
          echo '    <style>' >> github-pages/list.html
          echo '      body { font-family: Arial, sans-serif; background-color: #f4f4f4; padding: 50px; }' >> github-pages/list.html
          echo '      h1 { color: #333; }' >> github-pages/list.html
          echo '      ul { list-style-type: none; padding: 0; }' >> github-pages/list.html
          echo '      li { background-color: #007bff; color: white; padding: 15px; margin: 10px 0; border-radius: 5px; }' >> github-pages/list.html
          echo '      li a { color: white; text-decoration: none; display: block; }' >> github-pages/list.html
          echo '      li:hover { background-color: #0056b3; }' >> github-pages/list.html
          echo '      .back-btn { display: inline-block; margin-top: 20px; padding: 10px 20px; color: white; background-color: #007bff; text-decoration: none; border-radius: 5px; }' >> github-pages/list.html
          echo '      .back-btn:hover { background-color: #0056b3; }' >> github-pages/list.html
          echo '    </style>' >> github-pages/list.html
          echo '  </head>' >> github-pages/list.html
          echo '  <body>' >> github-pages/list.html
          echo '    <h1>Documentation for HTS LTS</h1>' >> github-pages/list.html
          echo '    <p>All available documentations: </p>' >> github-pages/list.html
          echo '    <ul>' >> github-pages/list.html

          # Append a list item for each HTML file
          for file in github-pages/rendered-docs/*.html; do
            filename=$(basename "$file")
            echo "      <li><a href='rendered-docs/$filename'>$filename</a></li>" >> github-pages/list.html
          done

          echo '    </ul>' >> github-pages/list.html
          echo '    <a href="/index.html" class="back-btn">Back to project list</a>' >> github-pages/list.html
          echo '  </body>' >> github-pages/list.html
          echo '</html>' >> github-pages/list.html

      - name: Commit and push changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add github-pages/rendered-docs
          git add github-pages/list.html
          git add mkdocs.yaml
          if ! git diff --cached --quiet; then
            git commit -m "Generated documentation with MkDocs"
            git push
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


